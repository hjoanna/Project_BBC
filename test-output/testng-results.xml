<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="8" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="317303" started-at="2019-12-10T11:33:57Z" finished-at="2019-12-10T11:39:14Z">
    <groups>
    </groups>
    <test name="Weather_Settings_Language" duration-ms="49173" started-at="2019-12-10T11:33:57Z" finished-at="2019-12-10T11:34:46Z">
      <class name="practice.Weather_Settings_Language">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_Language@13795b6]" name="initialize" is-config="true" duration-ms="16782" started-at="2019-12-10T11:33:57Z" finished-at="2019-12-10T11:34:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_Language@13795b6]" name="nameBefore" is-config="true" duration-ms="29" started-at="2019-12-10T11:34:14Z" finished-at="2019-12-10T11:34:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_Language.languageList(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="languageList(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:practice.Weather_Settings_Language@13795b6]" name="languageList" duration-ms="31159" started-at="2019-12-10T11:34:14Z" finished-at="2019-12-10T11:34:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gaeilge]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[G*idhlig]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Cymraeg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- languageList -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_Language@13795b6]" name="teardown" is-config="true" duration-ms="1143" started-at="2019-12-10T11:34:45Z" finished-at="2019-12-10T11:34:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_Language -->
    </test> <!-- Weather_Settings_Language -->
    <test name="HomePage_TopMenu_NewWindows" duration-ms="168040" started-at="2019-12-10T11:34:46Z" finished-at="2019-12-10T11:37:34Z">
      <class name="practice.HomePage_TopMenu_NewWindows">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.HomePage_TopMenu_NewWindows@1c1b556]" name="initialize" is-config="true" duration-ms="18233" started-at="2019-12-10T11:34:46Z" finished-at="2019-12-10T11:35:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.HomePage_TopMenu_NewWindows@1c1b556]" name="nameBefore" is-config="true" duration-ms="35" started-at="2019-12-10T11:35:04Z" finished-at="2019-12-10T11:35:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.HomePage_TopMenu_NewWindows.mainMenuTabs(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.awt.AWTException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="mainMenuTabs(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:practice.HomePage_TopMenu_NewWindows@1c1b556]" name="mainMenuTabs" duration-ms="147038" started-at="2019-12-10T11:35:04Z" finished-at="2019-12-10T11:37:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BBC Sounds - Music. Radio. Podcasts]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BBC - Homepage]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BBC Weather]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BBC WORLD NEWS North America - Schedules]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[BBC - Culture - Music]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Home - BBC News]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[BBC - Culture - Home]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Home - BBC Future]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[BBC - Travel - Home]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Home - BBC Worklife]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Home - BBC Reel]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Home - BBC Sport]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainMenuTabs -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.HomePage_TopMenu_NewWindows@1c1b556]" name="teardown" is-config="true" duration-ms="2719" started-at="2019-12-10T11:37:31Z" finished-at="2019-12-10T11:37:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.HomePage_TopMenu_NewWindows -->
    </test> <!-- HomePage_TopMenu_NewWindows -->
    <test name="TV_Schedule_regionAnotherDay" duration-ms="18580" started-at="2019-12-10T11:37:34Z" finished-at="2019-12-10T11:37:53Z">
      <class name="practice.TV_Schedule_regionAnotherDay">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.TV_Schedule_regionAnotherDay@5b7c14]" name="initialize" is-config="true" duration-ms="7045" started-at="2019-12-10T11:37:34Z" finished-at="2019-12-10T11:37:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.TV_Schedule_regionAnotherDay@5b7c14]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-12-10T11:37:41Z" finished-at="2019-12-10T11:37:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.TV_Schedule_regionAnotherDay.regionsNavigation(int,int) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="regionsNavigation(int, int)[pri:0, instance:practice.TV_Schedule_regionAnotherDay@5b7c14]" name="regionsNavigation" duration-ms="9997" started-at="2019-12-10T11:37:41Z" finished-at="2019-12-10T11:37:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regionsNavigation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.TV_Schedule_regionAnotherDay@5b7c14]" name="teardown" is-config="true" duration-ms="1526" started-at="2019-12-10T11:37:51Z" finished-at="2019-12-10T11:37:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.TV_Schedule_regionAnotherDay -->
    </test> <!-- TV_Schedule_regionAnotherDay -->
    <test name="Weather_Settings_Wind" duration-ms="24780" started-at="2019-12-10T11:37:53Z" finished-at="2019-12-10T11:38:17Z">
      <class name="practice.Weather_Settings_Wind">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_Wind@1b6aecc]" name="initialize" is-config="true" duration-ms="10602" started-at="2019-12-10T11:37:53Z" finished-at="2019-12-10T11:38:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_Wind@1b6aecc]" name="nameBefore" is-config="true" duration-ms="5" started-at="2019-12-10T11:38:03Z" finished-at="2019-12-10T11:38:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_Wind.windSpeedList(java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="windSpeedList(java.lang.String)[pri:0, instance:practice.Weather_Settings_Wind@1b6aecc]" name="windSpeedList" duration-ms="11601" started-at="2019-12-10T11:38:03Z" finished-at="2019-12-10T11:38:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[new york]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windSpeedList -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_Wind@1b6aecc]" name="teardown" is-config="true" duration-ms="2555" started-at="2019-12-10T11:38:15Z" finished-at="2019-12-10T11:38:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_Wind -->
    </test> <!-- Weather_Settings_Wind -->
    <test name="TV_Schedule_today" duration-ms="6558" started-at="2019-12-10T11:38:17Z" finished-at="2019-12-10T11:38:24Z">
      <class name="practice.TV_Schedule_today">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.TV_Schedule_today@130ad9c]" name="initialize" is-config="true" duration-ms="5534" started-at="2019-12-10T11:38:17Z" finished-at="2019-12-10T11:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.TV_Schedule_today@130ad9c]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-12-10T11:38:23Z" finished-at="2019-12-10T11:38:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.TV_Schedule_today.todaySchedule() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="todaySchedule()[pri:0, instance:practice.TV_Schedule_today@130ad9c]" name="todaySchedule" duration-ms="101" started-at="2019-12-10T11:38:23Z" finished-at="2019-12-10T11:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- todaySchedule -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.TV_Schedule_today@130ad9c]" name="teardown" is-config="true" duration-ms="916" started-at="2019-12-10T11:38:23Z" finished-at="2019-12-10T11:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.TV_Schedule_today -->
    </test> <!-- TV_Schedule_today -->
    <test name="TV_Schedule_tomorrow" duration-ms="11246" started-at="2019-12-10T11:38:24Z" finished-at="2019-12-10T11:38:35Z">
      <class name="practice.TV_Schedule_tomorrow">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.TV_Schedule_tomorrow@1c911a1]" name="initialize" is-config="true" duration-ms="6118" started-at="2019-12-10T11:38:24Z" finished-at="2019-12-10T11:38:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.TV_Schedule_tomorrow@1c911a1]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-12-10T11:38:30Z" finished-at="2019-12-10T11:38:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.TV_Schedule_tomorrow.tomorrowLink() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="tomorrowLink()[pri:0, instance:practice.TV_Schedule_tomorrow@1c911a1]" name="tomorrowLink" duration-ms="4081" started-at="2019-12-10T11:38:30Z" finished-at="2019-12-10T11:38:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tomorrowLink -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.TV_Schedule_tomorrow@1c911a1]" name="teardown" is-config="true" duration-ms="1042" started-at="2019-12-10T11:38:34Z" finished-at="2019-12-10T11:38:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.TV_Schedule_tomorrow -->
    </test> <!-- TV_Schedule_tomorrow -->
    <test name="Weather_Settings_Temperature" duration-ms="24513" started-at="2019-12-10T11:38:35Z" finished-at="2019-12-10T11:39:00Z">
      <class name="practice.Weather_Settings_Temperature">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_Temperature@11caca8]" name="initialize" is-config="true" duration-ms="11557" started-at="2019-12-10T11:38:35Z" finished-at="2019-12-10T11:38:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_Temperature@11caca8]" name="nameBefore" is-config="true" duration-ms="17" started-at="2019-12-10T11:38:47Z" finished-at="2019-12-10T11:38:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_Temperature.temperatureList(java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="temperatureList(java.lang.String)[pri:0, instance:practice.Weather_Settings_Temperature@11caca8]" name="temperatureList" duration-ms="11443" started-at="2019-12-10T11:38:47Z" finished-at="2019-12-10T11:38:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[new york]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temperatureList -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_Temperature@11caca8]" name="teardown" is-config="true" duration-ms="1490" started-at="2019-12-10T11:38:58Z" finished-at="2019-12-10T11:39:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_Temperature -->
    </test> <!-- Weather_Settings_Temperature -->
    <test name="Weather_Settings_TemperatureWind" duration-ms="14208" started-at="2019-12-10T11:39:00Z" finished-at="2019-12-10T11:39:14Z">
      <class name="practice.Weather_Settings_TemperatureWind">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_TemperatureWind@5b295b]" name="initialize" is-config="true" duration-ms="11197" started-at="2019-12-10T11:39:00Z" finished-at="2019-12-10T11:39:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="tempWindDefault()[pri:0, instance:practice.Weather_Settings_TemperatureWind@5b295b]" name="tempWindDefault" duration-ms="482" started-at="2019-12-10T11:39:11Z" finished-at="2019-12-10T11:39:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tempWindDefault -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_TemperatureWind@5b295b]" name="nameBefore" is-config="true" duration-ms="0" started-at="2019-12-10T11:39:11Z" finished-at="2019-12-10T11:39:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_TemperatureWind.tempWindDefault() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_TemperatureWind@5b295b]" name="teardown" is-config="true" duration-ms="2524" started-at="2019-12-10T11:39:11Z" finished-at="2019-12-10T11:39:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_TemperatureWind -->
    </test> <!-- Weather_Settings_TemperatureWind -->
  </suite> <!-- Suite -->
</testng-results>
