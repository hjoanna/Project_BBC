<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="142322" started-at="2019-11-24T22:30:07Z" finished-at="2019-11-24T22:32:29Z">
    <groups>
    </groups>
    <test name="HomePage_TopMenu_NewWindows" duration-ms="54461" started-at="2019-11-24T22:30:07Z" finished-at="2019-11-24T22:31:01Z">
      <class name="practice.HomePage_TopMenu_NewWindows">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.HomePage_TopMenu_NewWindows@166e5bd]" name="initialize" is-config="true" duration-ms="9489" started-at="2019-11-24T22:30:07Z" finished-at="2019-11-24T22:30:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.HomePage_TopMenu_NewWindows@166e5bd]" name="nameBefore" is-config="true" duration-ms="16" started-at="2019-11-24T22:30:16Z" finished-at="2019-11-24T22:30:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.HomePage_TopMenu_NewWindows.mainMenuTabs(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.awt.AWTException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="mainMenuTabs(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:practice.HomePage_TopMenu_NewWindows@166e5bd]" name="mainMenuTabs" duration-ms="43493" started-at="2019-11-24T22:30:16Z" finished-at="2019-11-24T22:31:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BBC Sounds - Music. Radio. Podcasts]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BBC - Homepage]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BBC Weather]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BBC WORLD NEWS North America - Schedules]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[BBC - Culture - Music]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Home - BBC News]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[BBC - Culture - Home]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Home - BBC Future]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[BBC - Travel - Home]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Home - BBC Worklife]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Home - BBC Reel]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Home - BBC Sport]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainMenuTabs -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.HomePage_TopMenu_NewWindows@166e5bd]" name="teardown" is-config="true" duration-ms="1427" started-at="2019-11-24T22:31:00Z" finished-at="2019-11-24T22:31:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.HomePage_TopMenu_NewWindows -->
    </test> <!-- HomePage_TopMenu_NewWindows -->
    <test name="TV_Schedule_regionAnotherDay" duration-ms="11623" started-at="2019-11-24T22:31:01Z" finished-at="2019-11-24T22:31:13Z">
      <class name="practice.TV_Schedule_regionAnotherDay">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.TV_Schedule_regionAnotherDay@c0a365]" name="initialize" is-config="true" duration-ms="5087" started-at="2019-11-24T22:31:01Z" finished-at="2019-11-24T22:31:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.TV_Schedule_regionAnotherDay@c0a365]" name="nameBefore" is-config="true" duration-ms="0" started-at="2019-11-24T22:31:06Z" finished-at="2019-11-24T22:31:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.TV_Schedule_regionAnotherDay.regionsNavigation(int,int) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="regionsNavigation(int, int)[pri:0, instance:practice.TV_Schedule_regionAnotherDay@c0a365]" name="regionsNavigation" duration-ms="6228" started-at="2019-11-24T22:31:06Z" finished-at="2019-11-24T22:31:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regionsNavigation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.TV_Schedule_regionAnotherDay@c0a365]" name="teardown" is-config="true" duration-ms="303" started-at="2019-11-24T22:31:12Z" finished-at="2019-11-24T22:31:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.TV_Schedule_regionAnotherDay -->
    </test> <!-- TV_Schedule_regionAnotherDay -->
    <test name="TV_Schedule_today" duration-ms="5119" started-at="2019-11-24T22:31:13Z" finished-at="2019-11-24T22:31:18Z">
      <class name="practice.TV_Schedule_today">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.TV_Schedule_today@32be31]" name="initialize" is-config="true" duration-ms="4806" started-at="2019-11-24T22:31:13Z" finished-at="2019-11-24T22:31:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.TV_Schedule_today@32be31]" name="nameBefore" is-config="true" duration-ms="10" started-at="2019-11-24T22:31:17Z" finished-at="2019-11-24T22:31:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.TV_Schedule_today.todaySchedule() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="todaySchedule()[pri:0, instance:practice.TV_Schedule_today@32be31]" name="todaySchedule" duration-ms="61" started-at="2019-11-24T22:31:17Z" finished-at="2019-11-24T22:31:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- todaySchedule -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.TV_Schedule_today@32be31]" name="teardown" is-config="true" duration-ms="239" started-at="2019-11-24T22:31:18Z" finished-at="2019-11-24T22:31:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.TV_Schedule_today -->
    </test> <!-- TV_Schedule_today -->
    <test name="TV_Schedule_tomorrow" duration-ms="7580" started-at="2019-11-24T22:31:18Z" finished-at="2019-11-24T22:31:25Z">
      <class name="practice.TV_Schedule_tomorrow">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.TV_Schedule_tomorrow@10736d9]" name="initialize" is-config="true" duration-ms="4385" started-at="2019-11-24T22:31:18Z" finished-at="2019-11-24T22:31:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.TV_Schedule_tomorrow@10736d9]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-11-24T22:31:22Z" finished-at="2019-11-24T22:31:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.TV_Schedule_tomorrow.tomorrowLink() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="tomorrowLink()[pri:0, instance:practice.TV_Schedule_tomorrow@10736d9]" name="tomorrowLink" duration-ms="3025" started-at="2019-11-24T22:31:22Z" finished-at="2019-11-24T22:31:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tomorrowLink -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.TV_Schedule_tomorrow@10736d9]" name="teardown" is-config="true" duration-ms="168" started-at="2019-11-24T22:31:25Z" finished-at="2019-11-24T22:31:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.TV_Schedule_tomorrow -->
    </test> <!-- TV_Schedule_tomorrow -->
    <test name="Weather_Settings_Language" duration-ms="22618" started-at="2019-11-24T22:31:25Z" finished-at="2019-11-24T22:31:48Z">
      <class name="practice.Weather_Settings_Language">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_Language@3708b3]" name="initialize" is-config="true" duration-ms="6778" started-at="2019-11-24T22:31:25Z" finished-at="2019-11-24T22:31:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_Language@3708b3]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-11-24T22:31:32Z" finished-at="2019-11-24T22:31:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_Language.languageList(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="languageList(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:practice.Weather_Settings_Language@3708b3]" name="languageList" duration-ms="13519" started-at="2019-11-24T22:31:32Z" finished-at="2019-11-24T22:31:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gaeilge]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[G*idhlig]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Cymraeg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- languageList -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_Language@3708b3]" name="teardown" is-config="true" duration-ms="2314" started-at="2019-11-24T22:31:46Z" finished-at="2019-11-24T22:31:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_Language -->
    </test> <!-- Weather_Settings_Language -->
    <test name="Weather_Settings_Temperature" duration-ms="15721" started-at="2019-11-24T22:31:48Z" finished-at="2019-11-24T22:32:04Z">
      <class name="practice.Weather_Settings_Temperature">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_Temperature@1df90b0]" name="initialize" is-config="true" duration-ms="7079" started-at="2019-11-24T22:31:48Z" finished-at="2019-11-24T22:31:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_Temperature@1df90b0]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-11-24T22:31:55Z" finished-at="2019-11-24T22:31:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_Temperature.temperatureList(java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="FAIL" signature="temperatureList(java.lang.String)[pri:0, instance:practice.Weather_Settings_Temperature@1df90b0]" name="temperatureList" duration-ms="6053" started-at="2019-11-24T22:31:55Z" finished-at="2019-11-24T22:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[new york]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <message>
              <![CDATA[Celsius temperature is not correctly calculated to Fahrenheit expected:<45.0> but was:<44.0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError: Celsius temperature is not correctly calculated to Fahrenheit expected:<45.0> but was:<44.0>
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.failNotEquals(Assert.java:282)
at junit.framework.Assert.assertEquals(Assert.java:64)
at practice.Weather_Settings_Temperature.temperatureList(Weather_Settings_Temperature.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temperatureList -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_Temperature@1df90b0]" name="teardown" is-config="true" duration-ms="2102" started-at="2019-11-24T22:32:02Z" finished-at="2019-11-24T22:32:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_Temperature -->
    </test> <!-- Weather_Settings_Temperature -->
    <test name="Weather_Settings_TemperatureWind" duration-ms="9572" started-at="2019-11-24T22:32:04Z" finished-at="2019-11-24T22:32:13Z">
      <class name="practice.Weather_Settings_TemperatureWind">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_TemperatureWind@1907bac]" name="initialize" is-config="true" duration-ms="7053" started-at="2019-11-24T22:32:04Z" finished-at="2019-11-24T22:32:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_TemperatureWind@1907bac]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-11-24T22:32:11Z" finished-at="2019-11-24T22:32:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_TemperatureWind.tempWindDefault() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="tempWindDefault()[pri:0, instance:practice.Weather_Settings_TemperatureWind@1907bac]" name="tempWindDefault" duration-ms="142" started-at="2019-11-24T22:32:11Z" finished-at="2019-11-24T22:32:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tempWindDefault -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_TemperatureWind@1907bac]" name="teardown" is-config="true" duration-ms="2373" started-at="2019-11-24T22:32:11Z" finished-at="2019-11-24T22:32:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_TemperatureWind -->
    </test> <!-- Weather_Settings_TemperatureWind -->
    <test name="Weather_Settings_Wind" duration-ms="15453" started-at="2019-11-24T22:32:13Z" finished-at="2019-11-24T22:32:29Z">
      <class name="practice.Weather_Settings_Wind">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_Wind@1ac631b]" name="initialize" is-config="true" duration-ms="5925" started-at="2019-11-24T22:32:13Z" finished-at="2019-11-24T22:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_Wind@1ac631b]" name="nameBefore" is-config="true" duration-ms="4" started-at="2019-11-24T22:32:19Z" finished-at="2019-11-24T22:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_Wind.windSpeedList(java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="windSpeedList(java.lang.String)[pri:0, instance:practice.Weather_Settings_Wind@1ac631b]" name="windSpeedList" duration-ms="7280" started-at="2019-11-24T22:32:19Z" finished-at="2019-11-24T22:32:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[new york]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windSpeedList -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_Wind@1ac631b]" name="teardown" is-config="true" duration-ms="2243" started-at="2019-11-24T22:32:27Z" finished-at="2019-11-24T22:32:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_Wind -->
    </test> <!-- Weather_Settings_Wind -->
  </suite> <!-- Suite -->
</testng-results>
