<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="171496" started-at="2019-11-11T18:47:08Z" finished-at="2019-11-11T18:49:59Z">
    <groups>
    </groups>
    <test name="HomePage_TopMenu_NewWindows" duration-ms="69455" started-at="2019-11-11T18:47:08Z" finished-at="2019-11-11T18:48:17Z">
      <class name="practice.HomePage_TopMenu_NewWindows">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.HomePage_TopMenu_NewWindows@617c74e5]" name="initialize" is-config="true" duration-ms="12478" started-at="2019-11-11T19:47:08Z" finished-at="2019-11-11T19:47:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.HomePage_TopMenu_NewWindows@617c74e5]" name="nameBefore" is-config="true" duration-ms="40" started-at="2019-11-11T19:47:20Z" finished-at="2019-11-11T19:47:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.HomePage_TopMenu_NewWindows.mainMenuTabs(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.awt.AWTException,java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="mainMenuTabs(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:practice.HomePage_TopMenu_NewWindows@617c74e5]" name="mainMenuTabs" duration-ms="55577" started-at="2019-11-11T19:47:20Z" finished-at="2019-11-11T19:48:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BBC Sounds - Music. Radio. Podcasts]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BBC - Homepage]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BBC Weather]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BBC WORLD NEWS North America - Schedules]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[BBC - Culture - Music]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Home - BBC News]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[BBC - Culture - Home]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Home - BBC Future]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[BBC - Travel - Home]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Home - BBC Worklife]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Home - BBC Reel]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Home - BBC Sport]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainMenuTabs -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.HomePage_TopMenu_NewWindows@617c74e5]" name="teardown" is-config="true" duration-ms="1341" started-at="2019-11-11T19:48:16Z" finished-at="2019-11-11T19:48:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.HomePage_TopMenu_NewWindows -->
    </test> <!-- HomePage_TopMenu_NewWindows -->
    <test name="TV_Schedule_regionAnotherDay" duration-ms="13732" started-at="2019-11-11T18:48:17Z" finished-at="2019-11-11T18:48:31Z">
      <class name="practice.TV_Schedule_regionAnotherDay">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.TV_Schedule_regionAnotherDay@3dd3bcd]" name="initialize" is-config="true" duration-ms="4585" started-at="2019-11-11T19:48:17Z" finished-at="2019-11-11T19:48:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.TV_Schedule_regionAnotherDay@3dd3bcd]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-11-11T19:48:22Z" finished-at="2019-11-11T19:48:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.TV_Schedule_regionAnotherDay.regionsNavigation(int,int) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="regionsNavigation(int, int)[pri:0, instance:practice.TV_Schedule_regionAnotherDay@3dd3bcd]" name="regionsNavigation" duration-ms="7050" started-at="2019-11-11T19:48:22Z" finished-at="2019-11-11T19:48:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regionsNavigation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.TV_Schedule_regionAnotherDay@3dd3bcd]" name="teardown" is-config="true" duration-ms="2096" started-at="2019-11-11T19:48:29Z" finished-at="2019-11-11T19:48:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.TV_Schedule_regionAnotherDay -->
    </test> <!-- TV_Schedule_regionAnotherDay -->
    <test name="TV_Schedule_today" duration-ms="5699" started-at="2019-11-11T18:48:31Z" finished-at="2019-11-11T18:48:37Z">
      <class name="practice.TV_Schedule_today">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.TV_Schedule_today@7ca48474]" name="initialize" is-config="true" duration-ms="5270" started-at="2019-11-11T19:48:31Z" finished-at="2019-11-11T19:48:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.TV_Schedule_today@7ca48474]" name="nameBefore" is-config="true" duration-ms="7" started-at="2019-11-11T19:48:36Z" finished-at="2019-11-11T19:48:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.TV_Schedule_today.todaySchedule() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="todaySchedule()[pri:0, instance:practice.TV_Schedule_today@7ca48474]" name="todaySchedule" duration-ms="249" started-at="2019-11-11T19:48:36Z" finished-at="2019-11-11T19:48:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- todaySchedule -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.TV_Schedule_today@7ca48474]" name="teardown" is-config="true" duration-ms="173" started-at="2019-11-11T19:48:36Z" finished-at="2019-11-11T19:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.TV_Schedule_today -->
    </test> <!-- TV_Schedule_today -->
    <test name="TV_Schedule_tomorrow" duration-ms="8127" started-at="2019-11-11T18:48:37Z" finished-at="2019-11-11T18:48:45Z">
      <class name="practice.TV_Schedule_tomorrow">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.TV_Schedule_tomorrow@3c09711b]" name="initialize" is-config="true" duration-ms="4577" started-at="2019-11-11T19:48:37Z" finished-at="2019-11-11T19:48:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.TV_Schedule_tomorrow@3c09711b]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-11-11T19:48:41Z" finished-at="2019-11-11T19:48:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.TV_Schedule_tomorrow.tomorrowLink() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="tomorrowLink()[pri:0, instance:practice.TV_Schedule_tomorrow@3c09711b]" name="tomorrowLink" duration-ms="3182" started-at="2019-11-11T19:48:41Z" finished-at="2019-11-11T19:48:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tomorrowLink -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.TV_Schedule_tomorrow@3c09711b]" name="teardown" is-config="true" duration-ms="367" started-at="2019-11-11T19:48:44Z" finished-at="2019-11-11T19:48:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.TV_Schedule_tomorrow -->
    </test> <!-- TV_Schedule_tomorrow -->
    <test name="Weather_Settings_Language" duration-ms="31304" started-at="2019-11-11T18:48:45Z" finished-at="2019-11-11T18:49:16Z">
      <class name="practice.Weather_Settings_Language">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_Language@2669b199]" name="initialize" is-config="true" duration-ms="6728" started-at="2019-11-11T19:48:45Z" finished-at="2019-11-11T19:48:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_Language@2669b199]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-11-11T19:48:52Z" finished-at="2019-11-11T19:48:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_Language.languageList(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="languageList(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:practice.Weather_Settings_Language@2669b199]" name="languageList" duration-ms="22483" started-at="2019-11-11T19:48:52Z" finished-at="2019-11-11T19:49:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gaeilge]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[G*idhlig]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Cymraeg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- languageList -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_Language@2669b199]" name="teardown" is-config="true" duration-ms="2090" started-at="2019-11-11T19:49:14Z" finished-at="2019-11-11T19:49:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_Language -->
    </test> <!-- Weather_Settings_Language -->
    <test name="Weather_Settings_Temperature" duration-ms="17351" started-at="2019-11-11T18:49:16Z" finished-at="2019-11-11T18:49:33Z">
      <class name="practice.Weather_Settings_Temperature">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_Temperature@174d20a]" name="initialize" is-config="true" duration-ms="7019" started-at="2019-11-11T19:49:16Z" finished-at="2019-11-11T19:49:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_Temperature@174d20a]" name="nameBefore" is-config="true" duration-ms="0" started-at="2019-11-11T19:49:23Z" finished-at="2019-11-11T19:49:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_Temperature.temperatureList(java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="FAIL" signature="temperatureList(java.lang.String)[pri:0, instance:practice.Weather_Settings_Temperature@174d20a]" name="temperatureList" duration-ms="7638" started-at="2019-11-11T19:49:23Z" finished-at="2019-11-11T19:49:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[new york]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <message>
              <![CDATA[Celsius temperature is not correctly calculated to Fahrenheit expected:<57.0> but was:<58.0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError: Celsius temperature is not correctly calculated to Fahrenheit expected:<57.0> but was:<58.0>
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.failNotEquals(Assert.java:282)
	at junit.framework.Assert.assertEquals(Assert.java:64)
	at practice.Weather_Settings_Temperature.temperatureList(Weather_Settings_Temperature.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temperatureList -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_Temperature@174d20a]" name="teardown" is-config="true" duration-ms="2088" started-at="2019-11-11T19:49:31Z" finished-at="2019-11-11T19:49:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_Temperature -->
    </test> <!-- Weather_Settings_Temperature -->
    <test name="Weather_Settings_TemperatureWind" duration-ms="9510" started-at="2019-11-11T18:49:33Z" finished-at="2019-11-11T18:49:43Z">
      <class name="practice.Weather_Settings_TemperatureWind">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_TemperatureWind@48eff760]" name="initialize" is-config="true" duration-ms="7135" started-at="2019-11-11T19:49:33Z" finished-at="2019-11-11T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_TemperatureWind@48eff760]" name="nameBefore" is-config="true" duration-ms="1" started-at="2019-11-11T19:49:41Z" finished-at="2019-11-11T19:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_TemperatureWind.tempWindDefault() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="tempWindDefault()[pri:0, instance:practice.Weather_Settings_TemperatureWind@48eff760]" name="tempWindDefault" duration-ms="260" started-at="2019-11-11T19:49:41Z" finished-at="2019-11-11T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tempWindDefault -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_TemperatureWind@48eff760]" name="teardown" is-config="true" duration-ms="2113" started-at="2019-11-11T19:49:41Z" finished-at="2019-11-11T19:49:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_TemperatureWind -->
    </test> <!-- Weather_Settings_TemperatureWind -->
    <test name="Weather_Settings_Wind" duration-ms="16104" started-at="2019-11-11T18:49:43Z" finished-at="2019-11-11T18:49:59Z">
      <class name="practice.Weather_Settings_Wind">
        <test-method status="PASS" signature="initialize()[pri:0, instance:practice.Weather_Settings_Wind@215be6bb]" name="initialize" is-config="true" duration-ms="7199" started-at="2019-11-11T19:49:43Z" finished-at="2019-11-11T19:49:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:practice.Weather_Settings_Wind@215be6bb]" name="nameBefore" is-config="true" duration-ms="4" started-at="2019-11-11T19:49:50Z" finished-at="2019-11-11T19:49:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void practice.Weather_Settings_Wind.windSpeedList(java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method status="PASS" signature="windSpeedList(java.lang.String)[pri:0, instance:practice.Weather_Settings_Wind@215be6bb]" name="windSpeedList" duration-ms="8577" started-at="2019-11-11T19:49:50Z" finished-at="2019-11-11T19:49:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[new york]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- windSpeedList -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:practice.Weather_Settings_Wind@215be6bb]" name="teardown" is-config="true" duration-ms="324" started-at="2019-11-11T19:49:59Z" finished-at="2019-11-11T19:49:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- practice.Weather_Settings_Wind -->
    </test> <!-- Weather_Settings_Wind -->
  </suite> <!-- Suite -->
</testng-results>
